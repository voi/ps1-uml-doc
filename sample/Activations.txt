participant Sample : long participant name

timer One : timer
exit

start Sample : start
	Sample --> Another: sync sequence
	return: sync return

	Other --> Sample: async sequence
	return : async return

	alt : alt fragment
	    // comment
	    Sample ->> Another ,, : async, no sub sequence
	else : sub case in alt fragment
	    Sample <<- Other ,, : reverse caller and callee
	    Note note
	else : else
	    Sample --> One ,, : sync, no sub sequence
	end

	ref Another,Other : reference

	Another --> Another : self method call
		Note : note
		Another --> Sample ,, : method call 
		Another --> Other ,, : synchronized
		Another --> One ,, : sub sequence
	return

	Sample --> & ,, : self method call

exit : exit

signal Other : signal
exit
